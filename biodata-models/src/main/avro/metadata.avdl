@namespace("org.opencb.biodata.models.metadata")

protocol MetadataProtocol {

     enum Type {
        CASE_CONTROL,
        CASE_SET,
        CONTROL_SET,
        PAIRED,
        PAIRED_TUMOR,
        AGGREGATE,
        TIME_SERIES,
        FAMILY,
        TRIO,
        COLLECTION
        // add a new Type, MISCELLANEOUS, OTHER ?
    }

    record Experiment {
	    string center;
        string date;
	    string type;
	    string platform;
	    string description;

        // Other possible fields:
        // - The experiment ID
        // - The name of the experiment.
        // - The time at which this message was created, ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
        // - The time at which this message was last updated, ISO 8601
        // - The time at which this experiment was performed,g ranularity here is variable (e.g. date only), ISO 8601
        // - The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
        // - The experiment technique or strategy applied to the sample. (e.g. whole genome sequencing, RNA-seq, RIP-seq)
        // - The method used to enrich the target. (e.g. immunoprecipitation, size fractionation, MNase digestion)
        // - The name of the library used as part of this experiment.
        // - The configuration of sequenced reads. (e.g. Single or Paired).
        // - The instrument model used as part of this experiment. This maps to sequencing technology in BAM.
        // - The data file generated by the instrument.
        // - A map of additional experiment information.
    }

    record Species {
	    string commonName;
	    string scientificName;
	    string taxonomyId;
	    string strain;
	    string assembly;
    }

	record Program {
        string name;
        string version;
        string commandLine;
        string url;
        string commit;
    }

    record Sample {
        string id;
        // age, population, height, weight, risk factors, secondary conditions,...
        // are stored in a map of attributes according to the format:
        // attribute_name[:x] where x defines the attribute type, its valid values are:
        //		n for numeric (i = integer, f = float)
        //		s for string
        //		b for boolean
        map<string> info;
    }

    record Individual {
        string id;
        string family;
        string father;
        string mother;
        string sex;
        string phenotype;

        // age, population, height, weight, risk factors, secondary conditions,...
        // are stored in a map of attributes according to the format:
        // attribute_name[:x] where x defines the attribute type, its valid values are:
        //		n for numeric (i = integer, f = float)
        //		s for string
        //		b for boolean
        map<string> info;

        array<Sample> samples;
    }

    record Cohort {
        string id;
        array<string> sampleNames = [];
        Type type;
    }
}
