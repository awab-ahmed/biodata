name: Push biodata develop
on:
  push:
    branches:
      - TASK-*
env:
  xb_version: "1.5.0"
jobs:
  build:
    uses: opencb/java-common-libs/.github/workflows/build-java-app-workflow.yml@develop
  test:
    name: Test biodata
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        module: ["tools", "models"]
        junitFile: ["site/css", "site/images", "site/surefire-report.html", "surefire-reports"]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Install Samtools
        run: sudo apt-get install samtools
      - name: Test and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify surefire-report:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=opencb_biodata
      - name: Deploy unit tests web recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: biodata-${{ matrix.module }}/target/${{ matrix.junitFile }}
          remote: /var/www/html/reports/development/${{ env.xb_version }}/${{ github.ref_name }}/${{ github.sha }}/unit/biodata-${{ matrix.module }}
          host: ${{ secrets.SSH_TESTING_SERVER_HOST}}
          port: ${{ secrets.SSH_TESTING_SERVER_PORT}}
          username: ${{ secrets.SSH_TESTING_SERVER_USER }}
          password: ${{ secrets.SSH_TESTING_SERVER_PASSWORD }}
      - name: Deploy coverage tests web recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: biodata-${{ matrix.module }}/target/site/jacoco
          remote: /var/www/html/reports/development/${{ env.xb_version }}/${{ github.ref_name }}/${{ github.sha }}/coverage/biodata-${{ matrix.module }}
          host: ${{ secrets.SSH_TESTING_SERVER_HOST}}
          port: ${{ secrets.SSH_TESTING_SERVER_PORT}}
          username: ${{ secrets.SSH_TESTING_SERVER_USER }}
          password: ${{ secrets.SSH_TESTING_SERVER_PASSWORD }}
