name: Push biodata develop

on:
  push:
    branches:
      - TASK-*

jobs:
  build:
    uses: opencb/java-common-libs/.github/workflows/build-java-app-workflow.yml@develop

#  sonar:
#    uses: opencb/java-common-libs/.github/workflows/sonar-analysis-workflow.yml@develop
#    needs: build
#    with:
#      sonarProjectKey: opencb_biodata
#    secrets:
#      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test:
    name: Test biodata
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        module: [ "tools", "model" ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Install Samtools
        run: sudo apt-get install samtools
#      - name: Run tests and create report with Maven
#        run: mvn -T 2 clean install -DskipTests
      - name: Test and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify surefire-report:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=opencb_biodata
      - name: Deploy tests web recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: biodata-${{ matrix.module }}/target/site
          remote: /var/www/html/reports/development/1.5.0/${{ needs.build.outputs.version }}/${{ github.ref_name }}/biodata-${{ matrix.module }}/${{ github.sha }}
          host: ${{ secrets.SSH_TESTING_SERVER_HOST}}
          port: ${{ secrets.SSH_TESTING_SERVER_PORT}}
          username: ${{ secrets.SSH_TESTING_SERVER_USER }}
          password: ${{ secrets.SSH_TESTING_SERVER_PASSWORD }}
#      - name: Deploy tests web recursively to remote
#        if: ${{ github.event.inputs.save == 'true' }}
#        uses: garygrossgarten/github-action-scp@release
#        with:
#          local: reports/cucumber_report.html
#          remote: /var/www/html/reports/${{ steps.package.outputs.version }}/${{ github.event.inputs.name }}/
#          host: ${{ secrets.SSH_TESTING_SERVER_HOST }}
#          port: ${{ secrets.SSH_TESTING_SERVER_PORT }}
#          username: ${{ secrets.SSH_TESTING_SERVER_USER }}
#          password: ${{ secrets.SSH_TESTING_SERVER_PASSWORD }}
